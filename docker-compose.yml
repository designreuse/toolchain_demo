version: '3.3'

services:
  jenkins:
    # image: ahl/jenkins:latest
    # alternatively, I've switched to the blueocean enabled version of Jenkins
    # this doesn't require a custom image, it's smaller and contains the 
    # embedded docker client
    # image: jenkinsci/blueocean:latest
    build: ./jenkins_build_def
    image: ahl/jenkins:v1
    user: root
    networks:
        tc-net:
          aliases: 
            - "orchestrate"
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - ./jenkins_home:/var/jenkins_home
      # run Docker from the host system when the container calls it. Note, Docker is stll 
      # required in the jenkins container
      - /var/run/docker.sock:/var/run/docker.sock
      # adding a bind for the Gradle build so the Gradle container can run the code. 
      # the Gradle container isn't specified here because the Jenkins agent bootstraps the build
      - ./spring-boot-demo:/home/project
      # for kubernetes yamls
      - ./kube_yamls:/kube/deploy

    container_name: jenkins

  db: 
    image: postgres
    networks:
      tc-net:
        aliases: 
          - "db"
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: t7jsqtnL
      POSTGRES_USER: admin
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      # contains the database(s) on the host
      - ./postgres_home/data:/var/lib/postgresql/data/pgdata
    container_name: postgres
  
  # add sonarqube as a service since it needs to materialize and be available during orchestration 
  # # activities, specifically collecting and reviewing the results of code analysis
  sonarqube: 
    image: sonarqube:latest
    networks:
      tc-net:
        aliases: 
          - "analyze"
    ports: 
      - "9000:9000"
      - "9092:9092"
    environment:
      SONARQUBE_JDBC_USERNAME: admin
      SONARQUBE_JDBC_PASSWORD: t7jsqtnL 
      SONARQUBE_JDBC_URL: jdbc:postgresql://db/sonar
    volumes:
      - ./sonar_home/conf:/opt/sonarqube/conf
      - ./sonar_home/data:/opt/sonarqube/data
      - ./sonar_home/extensions:/opt/sonarqube/extensions
      - ./sonar_home/bundled-plugins:/opt/sonarqube/lib/bundled-plugins
    container_name: sonarqube

  nexus:
    image: sonatype/nexus3:latest
    networks:
      tc-net:
        aliases:
          - "package-repo"
    ports:
      - "8088:8081"
    volumes:
      - ./nexus_home/nexus_data:/nexus-data
    container_name: nexus

networks:
  tc-net: